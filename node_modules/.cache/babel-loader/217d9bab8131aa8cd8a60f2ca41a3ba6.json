{"ast":null,"code":"var _jsxFileName = \"/Users/marshoward/Development/code/website/src/components/card.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { useSpring, animated } from 'react-spring';\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1];\n\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`;\n\nconst Card = ({\n  Gclass,\n  mouseEnter,\n  mouseExit,\n  description\n}) => {\n  const [props, set] = useSpring(() => ({\n    xys: [0, 0, 1],\n    config: {\n      mass: 5,\n      tension: 350,\n      friction: 40\n    }\n  }));\n\n  if (Gclass = \"highlight\") {\n    return /*#__PURE__*/React.createElement(animated.div, {\n      class: Gclass,\n      onMouseEnter: mouseEnter,\n      onMouseMove: ({\n        clientX: x,\n        clientY: y\n      }) => set({\n        xys: calc(x, y)\n      }),\n      onMouseLeave: (() => set({\n        xys: [0, 0, 1]\n      }), mouseExit),\n      style: {\n        transform: props.xys.interpolate(trans)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 8\n      }\n    }, description);\n  } else {\n    return /*#__PURE__*/React.createElement(animated.div, {\n      class: Gclass,\n      onMouseEnter: mouseEnter,\n      onMouseMove: ({\n        clientX: x,\n        clientY: y\n      }) => set({\n        xys: calc(x, y)\n      }),\n      onMouseLeave: (() => set({\n        xys: [0, 0, 1]\n      }), mouseExit),\n      style: {\n        transform: props.xys.interpolate(trans)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }\n    });\n  }\n};\n\nexport default Card;","map":{"version":3,"sources":["/Users/marshoward/Development/code/website/src/components/card.js"],"names":["React","ReactDOM","useSpring","animated","calc","x","y","window","innerHeight","innerWidth","trans","s","Card","Gclass","mouseEnter","mouseExit","description","props","set","xys","config","mass","tension","friction","clientX","clientY","transform","interpolate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,cAApC;;AAEA,MAAMC,IAAI,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU,CAAC,EAAEA,CAAC,GAAGC,MAAM,CAACC,WAAP,GAAqB,CAA3B,IAAgC,EAAjC,EAAqC,CAACH,CAAC,GAAGE,MAAM,CAACE,UAAP,GAAoB,CAAzB,IAA8B,EAAnE,EAAuE,GAAvE,CAAvB;;AACA,MAAMC,KAAK,GAAG,CAACL,CAAD,EAAIC,CAAJ,EAAOK,CAAP,KAAc,8BAA6BN,CAAE,gBAAeC,CAAE,cAAaK,CAAE,GAA3F;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAQC,EAAAA,UAAR;AAAmBC,EAAAA,SAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAA+C;AAC1D,QAAM,CAACC,KAAD,EAAQC,GAAR,IAAehB,SAAS,CAAC,OAAO;AAAEiB,IAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAAP;AAAkBC,IAAAA,MAAM,EAAE;AAAEC,MAAAA,IAAI,EAAE,CAAR;AAAWC,MAAAA,OAAO,EAAE,GAApB;AAAyBC,MAAAA,QAAQ,EAAE;AAAnC;AAA1B,GAAP,CAAD,CAA9B;;AAGA,MAAIV,MAAM,GAAG,WAAb,EAAyB;AACtB,wBACE,oBAAC,QAAD,CAAU,GAAV;AACE,MAAA,KAAK,EAAGA,MADV;AAEE,MAAA,YAAY,EAAEC,UAFhB;AAGE,MAAA,WAAW,EAAE,CAAC;AAAEU,QAAAA,OAAO,EAAEnB,CAAX;AAAcoB,QAAAA,OAAO,EAAEnB;AAAvB,OAAD,KAAgCY,GAAG,CAAC;AAAEC,QAAAA,GAAG,EAAEf,IAAI,CAACC,CAAD,EAAIC,CAAJ;AAAX,OAAD,CAHlD;AAIE,MAAA,YAAY,GAAE,MAAMY,GAAG,CAAC;AAAEC,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAP,OAAD,CAAT,EAA8BJ,SAAhC,CAJd;AAKE,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAET,KAAK,CAACE,GAAN,CAAUQ,WAAV,CAAsBjB,KAAtB;AAAb,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOEM,WAPF,CADF;AAUE,GAXL,MAYO;AAEF,wBACE,oBAAC,QAAD,CAAU,GAAV;AACE,MAAA,KAAK,EAAGH,MADV;AAEE,MAAA,YAAY,EAAEC,UAFhB;AAGE,MAAA,WAAW,EAAE,CAAC;AAAEU,QAAAA,OAAO,EAAEnB,CAAX;AAAcoB,QAAAA,OAAO,EAAEnB;AAAvB,OAAD,KAAgCY,GAAG,CAAC;AAAEC,QAAAA,GAAG,EAAEf,IAAI,CAACC,CAAD,EAAIC,CAAJ;AAAX,OAAD,CAHlD;AAIE,MAAA,YAAY,GAAE,MAAMY,GAAG,CAAC;AAAEC,QAAAA,GAAG,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAAP,OAAD,CAAT,EAA8BJ,SAAhC,CAJd;AAKE,MAAA,KAAK,EAAE;AAAEW,QAAAA,SAAS,EAAET,KAAK,CAACE,GAAN,CAAUQ,WAAV,CAAsBjB,KAAtB;AAAb,OALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAQE;AACR,CA3BD;;AA6BA,eAAeE,IAAf","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { useSpring, animated } from 'react-spring'\n\nconst calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]\nconst trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`\n\nconst Card = ({Gclass,mouseEnter,mouseExit,description}) => {\n  const [props, set] = useSpring(() => ({ xys: [0, 0, 1], config: { mass: 5, tension: 350, friction: 40 } }))\n\n\n  if (Gclass = \"highlight\"){\n    \treturn(\n    \t  <animated.div\n        \tclass= {Gclass}\n        \tonMouseEnter={mouseEnter}\n        \tonMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n        \tonMouseLeave={() => set({ xys: [0, 0, 1] }),mouseExit}\n        \tstyle={{ transform: props.xys.interpolate(trans) }}\n        >\n        {description}\n        </animated.div>\n    \t)}\n    \telse{\n    \t\n    \t  return (\n    \t    <animated.div\n    \t      class= {Gclass}\n    \t      onMouseEnter={mouseEnter}\n    \t      onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}\n    \t      onMouseLeave={() => set({ xys: [0, 0, 1] }),mouseExit}\n    \t      style={{ transform: props.xys.interpolate(trans) }}\n    \t    />\n    \t  )}\n}\n\nexport default Card\n"]},"metadata":{},"sourceType":"module"}